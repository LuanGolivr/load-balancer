
services:
  backend1:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PORT=${PORT}
      - INSTANCE_ID=backend-instance-1
    expose:
      - "${PORT}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT}/api/v1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 15s
  backend2:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PORT=${PORT}
      - INSTANCE_ID=backend-instance-2
    expose:
      - "${PORT}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT}/api/v1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 15s
  backend3:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PORT=${PORT}
      - INSTANCE_ID=backend-instance-3
    expose:
      - "${PORT}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT}/api/v1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 15s
  
  loadbalancer:
    build: 
      context: .
      dockerfile: Dockerfile.loadbalancer
    
    environment:
      - LB_PORT=${LB_PORT}
      - STRATEGY_CHOICE=${STRATEGY_CHOICE}
      - PORT=${PORT}
      - WEIGHTS=
    restart: always
    ports:
      - "${LB_PORT}:${LB_PORT}"
    depends_on:
      backend1:
        condition: service_healthy
      backend2:
        condition: service_healthy
      backend3:
        condition: service_healthy
    healthcheck:
      test: ["CMD","curl", "-f", "http://localhost:${LB_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  k6_direct:
    image: grafana/k6:latest
    volumes:
      - ./k6_script_singleNode.js:/k6_script.js
    restart: "no"
  
  k6_lb:
    image: grafana/k6:latest
    volumes:
      - ./k6_script_lb.js:/k6_script.js
    restart: "no"
      